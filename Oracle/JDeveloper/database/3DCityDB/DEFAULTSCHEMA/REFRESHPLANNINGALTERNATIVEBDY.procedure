-- <?xml version = '1.0' encoding = 'UTF-8'?>
-- <procedure xmlns="http://xmlns.oracle.com/jdeveloper/1112/offlinedb">
--   <properties>
--     <entry>
--       <key>OfflineDBConstants.IMPORT_SOURCE_CONNECTION</key>
--       <value class="java.lang.String">3DcityDB</value>
--     </entry>
--     <entry>
--       <key>OfflineDBConstants.IMPORT_SOURCE_ID</key>
--       <value class="oracle.javatools.db.ReferenceID">
--         <name>REFRESHPLANNINGALTERNATIVEBDY</name>
--         <identifier class="java.math.BigDecimal">114498</identifier>
--         <schemaName>YAO</schemaName>
--         <type>PROCEDURE</type>
--       </value>
--     </entry>
--   </properties>
-- </procedure>

CREATE OR REPLACE
PROCEDURE RefreshPlanningAlternativeBdy(
  planningAlternativeId NUMBER,
  outStatus OUT NUMBER,
  outMessage OUT VARCHAR2
)

IS
  -- lokale Variablen
  planningAlternativeStatus DATE;
  workspacename VARCHAR2(30);
  isRefreshed INTEGER;
  paCount NUMBER;
  paStatus NUMBER;
  paCountException EXCEPTION;
  paStatusException EXCEPTION;

BEGIN
  -- Abragen der Existenz und des Status der Planung
  checkPlanningAlternative(planningAlternativeId, paCount, paStatus);

  IF paCount = 1 THEN   -- Planungsalternative existiert
    IF paStatus = 1 THEN  -- Planungsalternative noch aktiv

      -- Suchen des Workspace Namen
      SELECT workspace_name INTO workspacename
      FROM planning_alternative
      WHERE id = planningAlternativeId;

      -- Prüfen ob Savepoint schon existiert
      SELECT count(savepoint) INTO isRefreshed
      FROM all_workspace_savepoints
      WHERE workspace = workspacename AND savepoint LIKE 'refreshed';

      -- Savepoint setzen
      IF isRefreshed > 0 THEN
        DBMS_WM.DeleteSavepoint(workspacename, 'refreshed');
      END IF;

      DBMS_WM.CreateSavepoint(workspacename, 'refreshed');

      -- Ausführen des Refresh
      DBMS_WM.RefreshWorkspace(workspacename);

	    setOutParameter(1, NULL, outStatus, outMessage);

    ELSE   -- Planungsalternative bereits beendet
      RAISE paStatusException;
    END IF;

  ELSE   -- Planungsalternative existiert nicht
    RAISE paCountException;
  END IF;


EXCEPTION
  WHEN paCountException THEN
    setOutParameter(0, '3D-Geo-DB: Planungsalternative existiert nicht', outStatus, outMessage);
  WHEN paStatusException THEN
    setOutParameter(0, '3D-Geo-DB: Planungsalternative ist bereits beendet', outStatus, outMessage);
  WHEN OTHERS THEN
    setOutParameter(0, sqlerrm, outStatus, outMessage);

END;
/

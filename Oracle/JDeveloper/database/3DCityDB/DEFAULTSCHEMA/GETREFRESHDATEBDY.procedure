-- <?xml version = '1.0' encoding = 'UTF-8'?>
-- <procedure xmlns="http://xmlns.oracle.com/jdeveloper/1112/offlinedb">
--   <properties>
--     <entry>
--       <key>OfflineDBConstants.IMPORT_SOURCE_CONNECTION</key>
--       <value class="java.lang.String">3DcityDB</value>
--     </entry>
--     <entry>
--       <key>OfflineDBConstants.IMPORT_SOURCE_ID</key>
--       <value class="oracle.javatools.db.ReferenceID">
--         <name>GETREFRESHDATEBDY</name>
--         <identifier class="java.math.BigDecimal">75418</identifier>
--         <schemaName>YAO</schemaName>
--         <type>PROCEDURE</type>
--       </value>
--     </entry>
--   </properties>
-- </procedure>

CREATE OR REPLACE
PROCEDURE GetRefreshDateBdy(
  planningAlternativeId NUMBER,
  outStatus OUT NUMBER,
  outMessage OUT VARCHAR2
)

IS
  -- lokale Variablen
  workspaceName VARCHAR2(30);
  refreshDate DATE;
  paCount NUMBER;
  paStatus NUMBER;
  paCountException EXCEPTION;
  paStatusException EXCEPTION;

BEGIN
  -- Abragen der Existenz und des Status der Planung
  checkPlanningAlternative(planningAlternativeId, paCount, paStatus);

  IF paCount = 1 THEN   -- Planungsalternative existiert
    IF paStatus = 1 THEN  -- Planungsalternative noch aktiv

      -- Name des Workspaces abfragen
      SELECT workspace_name INTO workspaceName
      FROM planning_alternative
      WHERE id = planningAlternativeId;

      -- Refresh-Datum abfragen
      SELECT createtime INTO refreshDate
    	FROM all_workspace_savepoints
    	WHERE savepoint LIKE 'refreshed' AND workspace LIKE workspaceName;

	    setOutParameter(1, TO_CHAR(refreshDate, 'DD.MM.YYYY HH24:MI:SS'), outStatus, outMessage);

    ELSE   -- Planungsalternative bereits beendet
      RAISE paStatusException;
    END IF;

  ELSE   -- Planungsalternative existiert nicht
    RAISE paCountException;
  END IF;

EXCEPTION
  WHEN paCountException THEN
    setOutParameter(0, '3D-Geo-DB: Planungsalternative existiert nicht', outStatus, outMessage);
  WHEN paStatusException THEN
    setOutParameter(0, '3D-Geo-DB: Planungsalternative ist bereits beendet', outStatus, outMessage);
  WHEN OTHERS THEN
    setOutParameter(0, sqlerrm, outStatus, outMessage);

END;
/

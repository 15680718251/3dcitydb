-- <?xml version = '1.0' encoding = 'UTF-8'?>
-- <procedure xmlns="http://xmlns.oracle.com/jdeveloper/1112/offlinedb">
--   <properties>
--     <entry>
--       <key>OfflineDBConstants.IMPORT_SOURCE_CONNECTION</key>
--       <value class="java.lang.String">3DcityDB</value>
--     </entry>
--     <entry>
--       <key>OfflineDBConstants.IMPORT_SOURCE_ID</key>
--       <value class="oracle.javatools.db.ReferenceID">
--         <name>ADDPLANNINGALTERNATIVEBDY</name>
--         <identifier class="java.math.BigDecimal">114491</identifier>
--         <schemaName>YAO</schemaName>
--         <type>PROCEDURE</type>
--       </value>
--     </entry>
--   </properties>
-- </procedure>

CREATE OR REPLACE
PROCEDURE AddPlanningAlternativeBdy(
  planningId NUMBER,
  title VARCHAR2,
  description VARCHAR2,
  generator VARCHAR2,
  planner VARCHAR2,
  outStatus OUT NUMBER,
  outMessage OUT VARCHAR2
)

IS
  -- lokale Variablen
  sequenceGeneratedId NUMBER;
  planningCount NUMBER;
  planningStatus NUMBER;
  userName VARCHAR2(30);
  workspaceName VARCHAR2(30);
  planningCountException EXCEPTION;
  planningStatusException EXCEPTION;

BEGIN
  -- Abragen der Existenz und des Status der Planung
  checkPlanning(planningId, planningCount, planningStatus);

  IF planningCount = 1 THEN   -- Planung existiert
    IF planningStatus = 1 THEN  -- Planung noch aktiv

      -- den nächsten Zähler der Sequenz abholen
      SELECT planning_alternative_seq.nextval INTO sequenceGeneratedId
      FROM dual;

      -- den Benutzernamen dieser Session abfragen
      SELECT user INTO userName
      FROM dual;

      -- den Benutzernamen auf 15 Zeichen begrenzen
      IF LENGTH(userName) > 15 THEN
      	userName := SUBSTR(userName, 1, 9) || SUBSTR(userName, LENGTH(userName) - 5, LENGTH(userName));
      END IF;

      -- Workspacename festlegen
      workspaceName := 'PA_' || userName || '_' || TO_CHAR(planningId) || '_' || TO_CHAR(sequenceGeneratedId);

      -- Tupel einfügen
      INSERT INTO planning_alternative
      VALUES(
        sequenceGeneratedId,
        planningId,
        title,
        description,
        generator,
        planner,
        workspaceName,
        CURRENT_TIMESTAMP,
        null
      );

      -- Workspace anlegen und Savepoint 'refreshed' erzeugen
      DBMS_WM.GoToWorkspace('LIVE');
      DBMS_WM.CreateWorkspace(workspaceName);
      DBMS_WM.CreateSavepoint(workspaceName, 'refreshed');

      COMMIT;
      setOutParameter(1, workspaceName, outStatus, outMessage);

    ELSE   -- Planung bereits beendet
      RAISE planningStatusException;
    END IF;

  ELSE   -- Planung existiert nicht
    RAISE planningCountException;
  END IF;


EXCEPTION
  WHEN planningCountException THEN
    setOutParameter(0, '3D-Geo-DB: Planung existiert nicht', outStatus, outMessage);
  WHEN planningStatusException THEN
    setOutParameter(0, '3D-Geo-DB: Planung ist bereits beendet', outStatus, outMessage);
  WHEN OTHERS THEN
    setOutParameter(0, sqlerrm, outStatus, outMessage);

END;
/

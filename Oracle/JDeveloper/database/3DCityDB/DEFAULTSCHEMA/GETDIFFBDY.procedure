-- <?xml version = '1.0' encoding = 'UTF-8'?>
-- <procedure xmlns="http://xmlns.oracle.com/jdeveloper/1112/offlinedb">
--   <properties>
--     <entry>
--       <key>OfflineDBConstants.IMPORT_SOURCE_CONNECTION</key>
--       <value class="java.lang.String">3DcityDB</value>
--     </entry>
--     <entry>
--       <key>OfflineDBConstants.IMPORT_SOURCE_ID</key>
--       <value class="oracle.javatools.db.ReferenceID">
--         <name>GETDIFFBDY</name>
--         <identifier class="java.math.BigDecimal">114494</identifier>
--         <schemaName>YAO</schemaName>
--         <type>PROCEDURE</type>
--       </value>
--     </entry>
--   </properties>
-- </procedure>

CREATE OR REPLACE
PROCEDURE GetDiffBdy(
  planningAlternativeId VARCHAR2,
  outStatus OUT NUMBER,
  outMessage OUT VARCHAR2
)

IS
  -- lokale Variablen
  ws VARCHAR2(30);
  diff INTEGER;
  c INTEGER;
  paCount NUMBER;
  paStatus NUMBER;
  paCountException EXCEPTION;
  paStatusException EXCEPTION;

  cursor versioned_tables_cur is
    select table_name from user_wm_versioned_tables;

BEGIN
  -- Abfragen der Existenz und des Status der Planung
  checkPlanningAlternative(planningAlternativeId, paCount, paStatus);

  IF paCount = 1 THEN   -- Planungsalternative existiert
    IF paStatus = 1 THEN  -- Planungsalternative noch aktiv
    	-- Workspacenamen abfragen
    	SELECT workspace_name INTO ws
    	FROM planning_alternative
    	WHERE id = planningAlternativeId;

	    -- Differenzen zu LIVE auswerten lassen
	    dbms_wm.SetDiffVersions('LIVE', ws);

      -- Differenzen z√§hlen
      for versioned_tables_rec in versioned_tables_cur loop
        execute immediate 'SELECT (COUNT(WM_CODE) / 3) FROM ' || versioned_tables_rec.table_name || '_DIFF' into c;
        diff := diff + c;
      end loop;

	    setOutParameter(1, TO_CHAR(diff), outStatus, outMessage);

    ELSE   -- Planungsalternative bereits beendet
      RAISE paStatusException;
    END IF;

  ELSE   -- Planungsalternative existiert nicht
    RAISE paCountException;
  END IF;


EXCEPTION
  WHEN paCountException THEN
    setOutParameter(0, '3D-Geo-DB: Planungsalternative existiert nicht', outStatus, outMessage);
  WHEN paStatusException THEN
    setOutParameter(0, '3D-Geo-DB: Planungsalternative ist bereits beendet', outStatus, outMessage);
  WHEN OTHERS THEN
    setOutParameter(0, sqlerrm, outStatus, outMessage);

END;
/
